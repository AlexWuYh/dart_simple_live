name: app-build-action

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ÁâàÊú¨Âè∑ÔºàÂèØÈÄâÔºâ'
        required: false
      prerelease:
        description: 'ÊòØÂê¶‰∏∫È¢ÑÂèëÂ∏ÉÔºàtrue/falseÔºâ'
        required: false
  push:
    branches:
      - master         # master ÂàÜÊîØ push Êó∂Ëß¶Âèë

jobs:
  build-mac-ios-android:
    runs-on: macos-14
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      # Android keystore
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > simple_live_app/android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> simple_live_app/android/key.properties

      # Java & Flutter
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      - name: Enable Mac Desktop
        run: flutter config --enable-macos-desktop

      - name: Restore packages
        run: flutter pub get
        working-directory: simple_live_app

      - name: Install appdmg
        run: npm install -g appdmg

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      # Build Android APK
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi
        working-directory: simple_live_app

      # Build Android TV APK
      - name: Build Android TV APK
        run: flutter build apk --release -t lib/main_tv.dart
        working-directory: simple_live_app

      # Upload Android Artifacts
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk # Android TV

      # Build iOS IPA
      - name: Build iOS
        run: flutter build ios --release --no-codesign
        working-directory: simple_live_app

      - name: Create IPA
        run: |
          cd simple_live_app
          mkdir -p build/ios/iphoneos/Payload
          cp -R build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/Runner.app
          cd build/ios/iphoneos
          zip -q -r ios_no_sign.ipa Payload

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: simple_live_app/build/ios/iphoneos/ios_no_sign.ipa

      # Build MacOS ARM
      - name: Build MacOS ARM
        run: flutter_distributor package --platform macos --targets dmg,zip --skip-clean
        working-directory: simple_live_app

      - name: Upload MacOS
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: |
            simple_live_app/build/dist/*/*-arm64.dmg
            simple_live_app/build/dist/*/*-arm64.zip

      # Read version
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: simple_live_app/assets/app_version.json

      - name: Set release info
        id: release_info
        run: |
          VERSION="${{ github.event.inputs.version }}"
          PRERELEASE="${{ github.event.inputs.prerelease }}"
          if [ -z "$VERSION" ]; then
            VERSION=$(jq -r '.version' simple_live_app/assets/app_version.json)
          fi
          if [ -z "$PRERELEASE" ]; then
            PRERELEASE=$(jq -r '.prerelease' simple_live_app/assets/app_version.json)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      # Upload to Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.release_info.outputs.version }}
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ steps.release_info.outputs.prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk # Android TV
            simple_live_app/build/ios/iphoneos/ios_no_sign.ipa
            simple_live_app/build/dist/*/*-arm64.dmg
            simple_live_app/build/dist/*/*-arm64.zip

      - run: echo "üçè Job status: ${{ job.status }}."

  build-linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Update apt-get
        run: sudo apt-get update
      - name: Install Dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libmpv-dev mpv

      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop

      - name: Restore Packages
        run: flutter pub get
        working-directory: simple_live_app

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build Linux
        run: flutter_distributor package --platform linux --targets deb,zip --skip-clean
        working-directory: simple_live_app

      - name: Upload Linux APP
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            simple_live_app/build/dist/*/*.deb
            simple_live_app/build/dist/*/*.zip

      - name: Upload Linux Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.release_info.outputs.version }}
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ steps.release_info.outputs.prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/dist/*/*.deb
            simple_live_app/build/dist/*/*.zip

  build-windows:
    runs-on: windows-2022
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Restore Packages
        run: flutter pub get
        working-directory: simple_live_app

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build Windows
        run: flutter_distributor package --platform windows --targets msix,zip --skip-clean
        working-directory: simple_live_app

      - name: Upload Windows APP
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - name: Upload Windows Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.release_info.outputs.version }}
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ steps.release_info.outputs.prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip
